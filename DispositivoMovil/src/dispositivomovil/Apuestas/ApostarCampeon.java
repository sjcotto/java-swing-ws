/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ApostarCampeon.java
 *
 * Created on Nov 9, 2011, 7:43:34 PM
 */

package dispositivomovil.Apuestas;

import WebServices.DispMovilWS.DataApuestaWS;
import WebServices.DispMovilWS.DataDivEquipo;
import WebServices.DispMovilWS.DispMovilWS;
import WebServices.DispMovilWS.DispMovilWSService;
import WebServices.DispMovilWS.TipoCampeonatoApuesta;
import dispositivomovil.DispositivoMovil;
import dispositivomovil.MenuPrincipal;
import java.io.FileInputStream;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Properties;
import javax.swing.ImageIcon;

/**
 *
 * @author tprog081
 */
public class ApostarCampeon extends javax.swing.JPanel {

    /** Creates new form ApostarCampeon */
    public ApostarCampeon(DispositivoMovil disp, int id, List<DataDivEquipo> equipos) {
        initComponents();
        this.dispMov=disp;
        this.equipos = equipos;
        this.jButton1.setEnabled(false);
        this.jButton2.setEnabled(false);
        this.jLabelError.setText("");

        String[] nomEquipos = new String[equipos.size()];
        for (int i=0; i<equipos.size();i++){
            nomEquipos[i]= equipos.get(i).getNombre()+"             "+equipos.get(i).getDividendo();
        }
        jList1.setListData(nomEquipos);

        ImageIcon ic = new ImageIcon("images/carrito.png");
        ImageIcon im = new ImageIcon(ic.getImage().getScaledInstance(15,15,15));

        this.jButton2.setIcon(im);

        ImageIcon ic2 = new ImageIcon("images/ap.png");
        ImageIcon im2 = new ImageIcon(ic2.getImage().getScaledInstance(15,15,15));
        this.jButton1.setIcon(im2);

        this.numRes.setText("");
        this.numero.setText("");

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        por = new javax.swing.JLabel();
        numero = new javax.swing.JLabel();
        esIgual = new javax.swing.JLabel();
        numRes = new javax.swing.JLabel();
        jLabelError = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Equipos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 30, 270, 210);

        jButton1.setBackground(java.awt.Color.darkGray);
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Apostar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(60, 290, 180, 25);

        jButton2.setBackground(java.awt.Color.darkGray);
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Agregar Paquete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(60, 320, 180, 25);

        jTextField1.setColumns(10);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(20, 250, 69, 19);

        por.setText("x");
        jPanel1.add(por);
        por.setBounds(100, 250, 20, 15);

        numero.setText("num");
        jPanel1.add(numero);
        numero.setBounds(130, 250, 40, 15);

        esIgual.setText("=");
        jPanel1.add(esIgual);
        esIgual.setBounds(180, 250, 10, 15);

        numRes.setText("num2");
        jPanel1.add(numRes);
        numRes.setBounds(220, 250, 50, 15);

        jLabelError.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabelError.setForeground(new java.awt.Color(255, 0, 0));
        jLabelError.setText("jLabel2");
        jPanel1.add(jLabelError);
        jLabelError.setBounds(20, 370, 260, 15);

        add(jPanel1);
        jPanel1.setBounds(10, 11, 300, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        filaLista = jList1.getSelectedIndex();
        if (filaLista>=0){
            this.jButton1.setEnabled(true);
            this.jButton2.setEnabled(true);
            this.numero.setText(Float.toString(equipos.get(filaLista).getDividendo()));
            
            try {
                this.numRes.setText(Float.toString(equipos.get(filaLista).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.numRes.setText("NaN"); 
            }

        }

    }//GEN-LAST:event_jList1MouseClicked

    private void apostarCampeonAux(boolean paquete){
        try {
            float monto = Float.parseFloat(this.jTextField1.getText()) ;

            Properties prop = new Properties();
            FileInputStream fis = new FileInputStream("web_services.xml");
            prop.loadFromXML(fis);
            String dir = prop.getProperty("dir_publicar");

            DispMovilWSService dms = new DispMovilWSService(new java.net.URL("http://"+dir+":8280/dispMovilWS?wsdl"),
                    new javax.xml.namespace.QName("http://WebServices/", "DispMovilWSService"));

            DispMovilWS disp = dms.getDispMovilWSPort();

            DataApuestaWS da = null;
            disp.seleccionarCampApuesta(this.dispMov.nickUsuLogueado,TipoCampeonatoApuesta.EQUIPO);
            if (!paquete) {
                disp.apostarCampeonato(this.dispMov.nickUsuLogueado, this.equipos.get(this.filaLista).getId(), monto);
                da = disp.mostrarApuesta(this.dispMov.nickUsuLogueado);
            } else {
                disp.apostarCampeonatoPaquete(this.dispMov.nickUsuLogueado, this.equipos.get(this.filaLista).getId(), monto);
                da = disp.mostrarApuestaPaquete(this.dispMov.nickUsuLogueado);
            }

            ConfirmarApuesta c = new ConfirmarApuesta(this.dispMov,da,paquete);
            c.setSize(320,420);
            this.dispMov.jDesktopPane1.add(c);
            c.setVisible(true);

            this.dispMov.jDesktopPane1.remove(this);
            this.removeAll();

        }
        catch (NumberFormatException exc){
            this.jLabelError.setText("Error: Monto invalido");
        }
        catch(Exception e){
            if (e.getMessage().contains("WSDL")){
                this.jLabelError.setText("Error: Se perdio la conexion");
                dispMov.online = false;
                ImageIcon imIcon= new ImageIcon("images/desconectado.png");
                this.dispMov.jLabel1.setIcon(new ImageIcon(imIcon.getImage().getScaledInstance(20,20,20)));
                dispMov.timer.start();
            } else {
                this.jLabelError.setText("Error: "+e.getMessage());
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!this.dispMov.online) {
            this.jLabelError.setText("Error: Sin conexion");
        }else {
            this.apostarCampeonAux(false);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!this.dispMov.online) {
            this.jLabelError.setText("Error: Sin conexion");
        }else {
            this.apostarCampeonAux(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (filaLista>=0){
            this.numero.setText(Float.toString(equipos.get(filaLista).getDividendo()));

            try {
                this.numRes.setText(Float.toString(equipos.get(filaLista).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.numRes.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        if (filaLista>=0){
            this.numero.setText(Float.toString(equipos.get(filaLista).getDividendo()));

            try {
                this.numRes.setText(Float.toString(equipos.get(filaLista).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.numRes.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (filaLista>=0){
            this.numero.setText(Float.toString(equipos.get(filaLista).getDividendo()));

            try {
                this.numRes.setText(Float.toString(equipos.get(filaLista).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.numRes.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel esIgual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel numRes;
    private javax.swing.JLabel numero;
    private javax.swing.JLabel por;
    // End of variables declaration//GEN-END:variables
    private DispositivoMovil dispMov;
    private List<DataDivEquipo> equipos;
    private int filaLista = -1;
}
