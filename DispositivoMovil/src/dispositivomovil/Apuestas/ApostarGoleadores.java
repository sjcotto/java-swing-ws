/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ApostarGoleadores.java
 *
 * Created on 05/11/2011, 01:23:08 PM
 */

package dispositivomovil.Apuestas;

import WebServices.DispMovilWS.DataApuestaWS;
import dispositivomovil.DispositivoMovil;

import WebServices.DispMovilWS.DataGoleador;
import WebServices.DispMovilWS.DispMovilWS;
import WebServices.DispMovilWS.DispMovilWSService;
import WebServices.DispMovilWS.TipoCampeonatoApuesta;
import java.awt.Color;
import java.io.FileInputStream;
import java.net.UnknownHostException;
import javax.swing.table.TableModel;
import java.util.List;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author gonzalo
 */
public class ApostarGoleadores extends javax.swing.JPanel {

    /** Creates new form ApostarGoleadores */
    public ApostarGoleadores(DispositivoMovil m, int idComp, List<DataGoleador> goleadores) {
        initComponents();
        this.dispMov = m;
        this.goleadores = goleadores;
        
        this.jLabelError.setText("");
        this.jLabelBen.setText("");
        this.jLabelDiv.setText("");


        this.setOpaque(false);

        this.dispMov.botonAtras.setEnabled(true);

        String[] columnNames = {"Id", "Nombre", "Goles", "Dividendo"};
        Object[][] objs = new Object[goleadores.size()][4];

        for (int i=0; i<goleadores.size(); i++) {
            objs[i][0] = goleadores.get(i).getId();
            objs[i][1] = goleadores.get(i).getNombre();
            objs[i][2] = goleadores.get(i).getGoles();
            objs[i][3] = goleadores.get(i).getDividendo();
        }

        TableModel tm = new DefaultTableModel(objs,columnNames);
        this.jTable1.setModel(tm);
        this.jTable1.getTableHeader().setForeground(Color.WHITE);
        this.jTable1.getTableHeader().setBackground(Color.DARK_GRAY);

        this.jButton1.setEnabled(false);
        this.jButton2.setEnabled(false);

        ImageIcon ic = new ImageIcon("images/carrito.png");
        ImageIcon im = new ImageIcon(ic.getImage().getScaledInstance(15,15,15));

        this.jButton2.setIcon(im);

        ImageIcon ic2 = new ImageIcon("images/ap.png");
        ImageIcon im2 = new ImageIcon(ic2.getImage().getScaledInstance(15,15,15));
        this.jButton1.setIcon(im2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabelDiv = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelBen = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabelError = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        add(jLabel3);
        jLabel3.setBounds(12, 400, 289, 0);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elija goleador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setOpaque(false);
        jPanel1.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setPreferredSize(null);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 270, 170);

        jTextField1.setColumns(10);
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.setOpaque(false);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(20, 230, 70, 19);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("x");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(100, 230, 20, 15);

        jLabelDiv.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDiv.setText("num");
        jPanel1.add(jLabelDiv);
        jLabelDiv.setBounds(120, 230, 50, 15);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("=");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(180, 230, 10, 15);

        jLabelBen.setForeground(new java.awt.Color(255, 255, 255));
        jLabelBen.setText("num");
        jPanel1.add(jLabelBen);
        jLabelBen.setBounds(200, 230, 60, 15);

        jButton1.setBackground(java.awt.Color.darkGray);
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Apostar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(50, 270, 180, 30);

        jButton2.setBackground(java.awt.Color.darkGray);
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Agregar Paquete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(50, 310, 180, 30);

        jLabelError.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabelError.setForeground(new java.awt.Color(255, 0, 0));
        jLabelError.setText("jLabel1");
        jPanel1.add(jLabelError);
        jLabelError.setBounds(20, 360, 230, 15);

        add(jPanel1);
        jPanel1.setBounds(10, 10, 290, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void apostarGoleadorAux(boolean paquete) {
        try {
            float monto = Float.parseFloat(this.jTextField1.getText()) ;

            Properties prop = new Properties();
            FileInputStream fis = new FileInputStream("web_services.xml");
            prop.loadFromXML(fis);
            String dir = prop.getProperty("dir_publicar");

            DispMovilWSService dms = new DispMovilWSService(new java.net.URL("http://"+dir+":8280/dispMovilWS?wsdl"),
                    new javax.xml.namespace.QName("http://WebServices/", "DispMovilWSService"));

            DispMovilWS disp = dms.getDispMovilWSPort();

            DataApuestaWS dataAp = null;
            disp.seleccionarCampApuesta(this.dispMov.nickUsuLogueado,TipoCampeonatoApuesta.GOLEADOR);
            if (!paquete) {
                disp.apostarGoleador(this.dispMov.nickUsuLogueado, this.idGoleador, monto);
                dataAp = disp.mostrarApuesta(this.dispMov.nickUsuLogueado);
            } else {
                disp.apostarGoleadorPaquete(this.dispMov.nickUsuLogueado, this.idGoleador, monto);
                dataAp = disp.mostrarApuestaPaquete(this.dispMov.nickUsuLogueado);
            }

            ConfirmarApuesta conf = new ConfirmarApuesta(this.dispMov, dataAp,paquete);
            this.dispMov.jDesktopPane1.add(conf);
            conf.setVisible(true);
            conf.setSize(320, 420);
            this.removeAll();
            this.dispMov.jDesktopPane1.remove(this);

        }
        catch (NumberFormatException e) {
            this.jLabelError.setText("Error: Monto invalido");
        }
        catch (Exception exc) {
            if (exc.getMessage().contains("WSDL")) {
                // Error de conexion
                this.jLabelError.setText("Error: Conexion perdida");
                dispMov.online = false;
                ImageIcon imIcon= new ImageIcon("images/desconectado.png");
                this.dispMov.jLabel1.setIcon(new ImageIcon(imIcon.getImage().getScaledInstance(20,20,20)));
                dispMov.timer.start();
            } else{
                this.jLabelError.setText("Error: "+exc.getMessage());
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!this.dispMov.online) {
            this.jLabelError.setText("Error: Sin conexion");
        }else {
            this.apostarGoleadorAux(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        fila = jTable1.rowAtPoint(evt.getPoint());
        
        if (fila > -1) {
            idGoleador = (Integer)jTable1.getValueAt(fila, 0);
            this.jButton1.setEnabled(true);
            this.jButton2.setEnabled(true);

            this.jLabelDiv.setText(Float.toString(goleadores.get(fila).getDividendo()));

            try {
                this.jLabelBen.setText(Float.toString(goleadores.get(fila).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.jLabelBen.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!this.dispMov.online) {
            this.jLabelError.setText("Error: Sin conexion");
        }else {
            this.apostarGoleadorAux(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (fila>=0){
            this.jLabelDiv.setText(Float.toString(goleadores.get(fila).getDividendo()));

            try {
                this.jLabelBen.setText(Float.toString(goleadores.get(fila).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.jLabelBen.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (fila>=0){
            this.jLabelDiv.setText(Float.toString(goleadores.get(fila).getDividendo()));

            try {
                this.jLabelBen.setText(Float.toString(goleadores.get(fila).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.jLabelBen.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        if (fila>=0){
            this.jLabelDiv.setText(Float.toString(goleadores.get(fila).getDividendo()));

            try {
                this.jLabelBen.setText(Float.toString(goleadores.get(fila).getDividendo()*Float.parseFloat(this.jTextField1.getText())));
            }
            catch (Exception exc){
                this.jLabelBen.setText("NaN");
            }
        }
    }//GEN-LAST:event_jTextField1KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelBen;
    private javax.swing.JLabel jLabelDiv;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
    private DispositivoMovil dispMov;
    private int idGoleador, fila;
    List<DataGoleador> goleadores;
}
