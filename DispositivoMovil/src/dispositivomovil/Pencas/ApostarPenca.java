/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ApostarPenca.java
 *
 * Created on Nov 3, 2011, 4:42:47 PM
 */

package dispositivomovil.Pencas;

import WebServices.DispMovilWS.DataInfoPartido;
import WebServices.DispMovilWS.DataInfoPenca;
import WebServices.DispMovilWS.DispMovilWS;
import WebServices.DispMovilWS.DispMovilWSService;
import dispositivomovil.DispositivoMovil;
import dispositivomovil.objetos.Competicion;
import dispositivomovil.objetos.Partido;
import dispositivomovil.objetos.Penca;
import java.io.FileInputStream;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author tprog084
 */
public class ApostarPenca extends javax.swing.JPanel {

    /** Creates new form ApostarPenca */
    public ApostarPenca(JFrame m, int idPenca) {
        initComponents();
        this.setSize(320,420);
        this.dispMov = (DispositivoMovil) m;
        this.idPenca=idPenca;
        this.jLabelError.setVisible(true);
        this.jLabelError.setText("");
        String [] s = {"Id","Local","Visitante"};

        if (this.dispMov.online){
            try{
                Properties prop = new Properties();
                FileInputStream fis = new FileInputStream("web_services.xml");
                prop.loadFromXML(fis);
                String dir = prop.getProperty("dir_publicar");

                DispMovilWSService dms = new DispMovilWSService(new java.net.URL("http://"+dir+":8280/dispMovilWS?wsdl"),new javax.xml.namespace.QName("http://WebServices/", "DispMovilWSService"));
                DispMovilWS disp = dms.getDispMovilWSPort();

                this.dispMov.obtenerInformacionServidor();
                List<DataInfoPartido> parts = disp.obtenerPartidosNoFinalizadosPenca(this.dispMov.nickUsuLogueado, idPenca).getList();

                Object[][] tabla = new Object[parts.size()][3];
                for (int i =0;i< parts.size();i++) {
                    tabla[i][0]= parts.get(i).getIdPar();
                    tabla[i][1]= parts.get(i).getNomLocal();
                 tabla[i][2]= parts.get(i).getNomVisita();
                }
                TableModel dtm = new DefaultTableModel(tabla,s);
                this.tablaParts.setModel(dtm);
                this.jButton1.setEnabled(false);


             }
           catch(Exception e){
              this.jLabelError.setText("Error: Se perdio la conexion");
              this.jLabelError.setVisible(true);
             dispMov.online = false;
             ImageIcon imIcon= new ImageIcon("images/desconectado.png");
             this.dispMov.jLabel1.setIcon(new ImageIcon(imIcon.getImage().getScaledInstance(20,20,20)));
             dispMov.timer.start();


              Penca p= this.dispMov.em.find(Penca.class, ((Competicion)this.dispMov.em.find(Competicion.class, idPenca)).getPenca().getId());
              List<Partido> partidos =p.getPartidos();
              
               Object[][] tabla = new Object[partidos.size()][3];
                for (int i =0;i< partidos.size();i++) {
                    tabla[i][0]= partidos.get(i).getId();
                    tabla[i][1]= partidos.get(i).getNombreEqL();
                 tabla[i][2]= partidos.get(i).getNombreEqV();
                }
                TableModel dtm = new DefaultTableModel(tabla,s);
                this.tablaParts.setModel(dtm);
                this.jButton1.setEnabled(false);
           }
        }else{
           Penca p= this.dispMov.em.find(Penca.class, ((Competicion)this.dispMov.em.find(Competicion.class, idPenca)).getPenca().getId());
           List<Partido> partidos =p.getPartidos();

            Object[][] tabla = new Object[partidos.size()][3];
            for (int i =0;i< partidos.size();i++) {
                tabla[i][0]= partidos.get(i).getId();
                tabla[i][1]= partidos.get(i).getNombreEqL();
                tabla[i][2]= partidos.get(i).getNombreEqV();
            }
            TableModel dtm = new DefaultTableModel(tabla,s);
            this.tablaParts.setModel(dtm);
            this.jButton1.setEnabled(false);

        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaParts = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabelError = new javax.swing.JLabel();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(320, 420));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Partidos");

        tablaParts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaParts.setShowHorizontalLines(false);
        tablaParts.setShowVerticalLines(false);
        tablaParts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPartsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaParts);

        jButton1.setBackground(java.awt.Color.darkGray);
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Apostar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Local :");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Visitante :");

        jTextField1.setColumns(3);

        jTextField2.setColumns(3);

        jLabelError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(218, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(41, 41, 41)))
                .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int golesL=-1;
         int golesV=-1;
        if (dispMov.online){
            try{
                try{
                     golesL = Integer.valueOf(this.jTextField1.getText());
                     golesV = Integer.valueOf(this.jTextField2.getText());
                }
                catch (NumberFormatException exc){
                    jLabelError.setText("goles Incorrectos");
                    jTextField1.setText("");
                    jTextField2.setText("");
                    return;
                }

                Properties prop = new Properties();
                FileInputStream fis = new FileInputStream("web_services.xml");
                prop.loadFromXML(fis);
                String dir = prop.getProperty("dir_publicar");

                DispMovilWSService dms = new DispMovilWSService(new java.net.URL("http://"+dir+":8280/dispMovilWS?wsdl"),new javax.xml.namespace.QName("http://WebServices/", "DispMovilWSService"));
                DispMovilWS disp = dms.getDispMovilWSPort();

                disp.obtenerPartidosNoFinalizadosPenca(this.dispMov.nickUsuLogueado, idPenca);
                disp.apostarPartidoPenca(this.dispMov.nickUsuLogueado, idPart, golesL, golesV);
//                List<Partido> parts = this.dispMov.em.find(Competicion.class,idPenca).getPenca().getPartidos();
//
//                this.dispMov.em.getTransaction().begin();
//                for(Partido p : parts){
//                    if (p.getId()==idPart){
//                        p.setAposto(true);
//                        this.dispMov.em.merge(p);
//
//                    }
//                }
//                this.dispMov.em.getTransaction().commit();

                jLabelError.setText("Partido Apostado");
                jTextField1.setText("");
                jTextField2.setText("");


            }
            catch (Exception e){
                //javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "BIEN", javax.swing.JOptionPane.ERROR_MESSAGE);
                if (e.getMessage().contains("WSDL")) {
                    this.jLabelError.setText("Error: Se perdio la conexion");
                    dispMov.online = false;
                    this.jLabelError.setVisible(true);
                    ImageIcon imIcon= new ImageIcon("images/desconectado.png");
                    this.dispMov.jLabel1.setIcon(new ImageIcon(imIcon.getImage().getScaledInstance(20,20,20)));
                    dispMov.timer.start();

                    this.dispMov.em.getTransaction().begin();
                    Competicion c = this.dispMov.em.find(Competicion.class,idPenca);
                    List<Partido> parts = c.getPenca().getPartidos();
                    for(Partido p : parts){
                        if((p.getId()==idPart)&& !p.isAposto()){
                            p.setAposto(true);
                            p.setGolesLoc(golesL);
                            p.setGolesVis(golesV);
                            jLabelError.setText("Partido Apostado");
                            jTextField1.setText("");
                            jTextField2.setText("");

                        }else if (p.getId()==idPart &&  p.isAposto()){
                            jLabelError.setText("Partido ya Apostado");
                            jTextField1.setText("");
                            jTextField2.setText("");
                        }
                    }

                    this.dispMov.em.merge(c);
                    this.dispMov.em.getTransaction().commit();

                } else {
                    jLabelError.setText(e.getMessage());
                    jTextField1.setText("");
                    jTextField2.setText("");
                    return;
                }
            }
       }else{
            try{
                 golesL = Integer.valueOf(this.jTextField1.getText());
                 golesV = Integer.valueOf(this.jTextField2.getText());
            }
            catch (NumberFormatException exc){
                jLabelError.setText("goles Incorrectos");
                jTextField1.setText("");
                jTextField2.setText("");
                return;
            }
           this.dispMov.em.getTransaction().begin();
           Competicion c = this.dispMov.em.find(Competicion.class,idPenca);
           List<Partido> parts = c.getPenca().getPartidos();
           for(Partido p : parts){
               if((p.getId()==idPart)&& !p.isAposto()){
                   p.setAposto(true);
                   p.setGolesLoc(golesL);
                   p.setGolesVis(golesV);
                   jLabelError.setText("Partido Apostado");
                    jLabelError.setVisible(true);
                    jTextField1.setText("");
                    jTextField2.setText("");

               }
               else if (p.getId()==idPart &&  p.isAposto()){
                     jLabelError.setText("Partido ya Apostado");
                     jTextField1.setText("");
                     jTextField2.setText("");
               }
           }
            this.dispMov.em.merge(c);
            this.dispMov.em.getTransaction().commit();
         }

         // Aca aposto, localmente o realmente, seteamos la tabla de nuevo


    }//GEN-LAST:event_jButton1ActionPerformed

    private void tablaPartsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPartsMouseClicked
        // TODO add your handling code here:

        fila = this.tablaParts.rowAtPoint(evt.getPoint());
        columna = this.tablaParts.columnAtPoint(evt.getPoint());

        if ((fila > -1) && (columna > -1)){
            idPart =(Integer) this.tablaParts.getValueAt(fila,0);

        }
        jButton1.setEnabled(true);

    }//GEN-LAST:event_tablaPartsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tablaParts;
    // End of variables declaration//GEN-END:variables

    private DispositivoMovil dispMov;
    private int fila,columna,idPart,idPenca;
}
