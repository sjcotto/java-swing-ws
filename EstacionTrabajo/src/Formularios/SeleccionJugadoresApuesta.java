package Formularios;

import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import javax.swing.RowFilter;
import java.util.List;
import DataTypes.*; //casi todos
import Interface.Fabrica;
import Interface.IControladorJugadores;
import Interface.IControladorCompeticiones;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JDesktopPane;
import DataTypes.TipoCompeticion;

public class SeleccionJugadoresApuesta extends javax.swing.JInternalFrame {

    /** Creates new form SeleccionEquiposCompeticion */
    public SeleccionJugadoresApuesta(Tarea1 parent,TipoCompeticion tipo, IControladorCompeticiones icc) { // GONZALO
        initComponents();

        icCompeticiones = icc;

        this.parent = parent;
        parent.setModoActivado(false);

        java.awt.Component content = parent.getContentPane();
        int x = (content.getWidth() - this.getWidth()) / 2;
        int y = (content.getHeight() - this.getHeight()) / 2;
        this.setLocation(x, y);

        tipoC = tipo;
        this.listaJugadoresSeleccionados = new ArrayList<DataIdNombre>();

        TableModel modelo = null; //lo armamos segun la operacion

        Fabrica f =  new Fabrica();
        String[] columnas = {"Id", "Nombre"};
        Object[][] data=null;

        IControladorJugadores iCJ = f.getIControladorJugadores();
        List<DataIdNombre> lista = iCJ.listaJugadores();
        data= new Object[lista.size()][2];
        for (int i = 0;i<lista.size();i++){
            DataIdNombre j = (DataIdNombre) lista.get(i);
            data[i][0] = j.getId();
            data[i][1] = j.getNombre();
        }
        modelo = new DefaultTableModel(data,columnas);
        tablaSeleccion.setModel(modelo);
        this.setTitle("Selecciones los jugadores");
        jButton13.setEnabled(false);
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(modelo);
        tablaSeleccion.setRowSorter(sorter);

        filtro.addKeyListener(new KeyListener() {

        @Override
        public void keyTyped(KeyEvent arg0) {
            String i = "(?i)";
            String texto= i.concat(filtro.getText());

            if (texto.length() == 4) {
                sorter.setRowFilter(null);
            } else {
                sorter.setRowFilter(RowFilter.regexFilter(texto));
            }
        }
        @Override
        public void keyReleased(KeyEvent arg0) {
            String i = "(?i)";
            String texto= i.concat(filtro.getText());
             if (texto.length() == 4) {
                sorter.setRowFilter(null);
            } else {
                sorter.setRowFilter(RowFilter.regexFilter(texto,1));
            }
        }
        @Override
        public void keyPressed(KeyEvent arg0) {
            String i = "(?i)";
            String texto= i.concat(filtro.getText());

            if (texto.length() == 4) {
                sorter.setRowFilter(null);
            } else {
                sorter.setRowFilter(RowFilter.regexFilter(texto,1));
            }

                }
                });

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton13 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaSeleccion = new javax.swing.JTable()
        {
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        filtro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jButton13.setText("Agregar Jugador");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton15.setText("Aceptar");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton14.setText("Cancelar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        tablaSeleccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaSeleccion.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaSeleccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaSeleccionMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaSeleccion);

        filtro.setColumns(4);
        filtro.setFont(new java.awt.Font("DejaVu Sans", 2, 13));
        filtro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtroMouseClicked(evt);
            }
        });

        jLabel1.setText("Seleccione un jugador apostable a goleador y presione  'Agregar Jugador'");

        jLabel2.setText("Pulse 'Aceptar' para continuar con el alta de la competicion");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton14))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jButton13))
                            .addGap(31, 31, 31)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(379, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jButton14))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        DefaultTableModel temp;

        DataIdNombre d = new DataIdNombre(idSeleccionadoTabla,nombreSeleccionadoTabla);
        this.listaJugadoresSeleccionados.add(d);

        //ahora sacamos la fila de la tabla actual
        temp = (DefaultTableModel) tablaSeleccion.getModel();
        temp.removeRow(fila);
       
        //mensaje de error al ingresar el 
        jButton13.setEnabled(false);

//                        ListaJugadores.setVisible(false)                
}//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
//        Fabrica f = new Fabrica();
//        IControladorCompeticiones icc = f.getIControladorCompeticiones();
        try {
            JInternalFrame j = new IngresarDividendosJugadores(this.listaJugadoresSeleccionados,parent,tipoC,icCompeticiones);
            parent.getLayeredPane().add(j);
            j.setVisible(true);
            this.dispose();
            
          /* boolean ok = icCompeticiones.seleccionCorrecta();
            if (!ok){
                parent.setModoActivado(true);
                this.dispose();
                JOptionPane.showMessageDialog(null, "La seleccion de equipos no ha sido correcta","Error", JOptionPane.ERROR_MESSAGE);
                icCompeticiones.finalizar();
            }else{
                if ( tipoC == tipoC.Copa){
                    JInternalFrame j = new IngresarDividendos(this.listaJugadoresSeleccionados,parent,tipoC,icCompeticiones);
                    parent.getLayeredPane().add(j);
                    j.setVisible(true);
                }else if (tipoC == tipoC.Liga){
                    JInternalFrame j = new IngresarTipoCriterioLiga(this.listaJugadoresSeleccionados,parent,tipoC,icCompeticiones);
                    parent.getLayeredPane().add(j);
                    j.setVisible(true);
                    this.dispose();
                }
                else
                    {
                    DataCompeticion dataC = icCompeticiones.mostrarInfoCompetencia();
                    //creamos el frame de confirmar.
                    JInternalFrame j = new confirmarCompeticion(dataC,parent,icCompeticiones);
                    parent.getLayeredPane().add(j);
                    j.setVisible(true);
                    this.dispose();
                }
           }*/
        }catch(Exception e){
            //error en la verificacion de equipos seleccionados
            parent.setModoActivado(true);
        }
        this.dispose();
}//GEN-LAST:event_jButton15ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        this.parent.setModoActivado(true);
        this.dispose();
}//GEN-LAST:event_jButton14ActionPerformed

    private void filtroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtroMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_filtroMouseClicked

    private void tablaSeleccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSeleccionMouseClicked
        // TODO add your handling code here:
        jButton13.setEnabled(false);
        
        fila = tablaSeleccion.rowAtPoint(evt.getPoint());//es global
        int columna = tablaSeleccion.columnAtPoint(evt.getPoint());

        if ((fila > -1) && (columna > -1)){
            idSeleccionadoTabla = (Integer) tablaSeleccion.getValueAt(fila,0);
            nombreSeleccionadoTabla = (String) tablaSeleccion.getValueAt(fila,1);
            jButton13.setEnabled(true);
        }
    }//GEN-LAST:event_tablaSeleccionMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filtro;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaSeleccion;
    // End of variables declaration//GEN-END:variables

    List<DataIdNombre> listaJugadoresSeleccionados = null;

    private int idSeleccionadoTabla,fila;
    private String nombreSeleccionadoTabla;
    private TipoCompeticion tipoC=null;
    private Tarea1 parent;

    private IControladorCompeticiones icCompeticiones; // GONZALO

}
