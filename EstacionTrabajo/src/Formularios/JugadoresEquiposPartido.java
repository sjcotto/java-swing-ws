/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JugadoresEquiposPartido.java
 *
 * Created on 24/08/2011, 12:34:21 AM
 */

package Formularios;

import DataTypes.DataJugPartido;
import DataTypes.DataIdNombre;
import Interface.Fabrica;
import Interface.IControladorCompeticiones;
import Excepciones.ExDatosNoAsignados;
import Excepciones.ExNoExistePartidoEnCompeticion;
import java.util.List;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author santiago
 */
public class JugadoresEquiposPartido extends javax.swing.JInternalFrame {

    /** Creates new form JugadoresEquiposPartido */
    public JugadoresEquiposPartido(Tarea1 parent, int id,String loc,String vis,IControladorCompeticiones icc,List<DataTypes.DataEvento> le) {
        initComponents();

        this.icCompeticiones  = icc;

        jLabel50.setText(loc);
        jLabel52.setText(vis);
        
        this.parent = parent;
        parent.setModoActivado(false);//no hace falta

        java.awt.Component content = parent.getContentPane();
        int x = (content.getWidth() - this.getWidth()) / 2;
        int y = (content.getHeight() - this.getHeight()) / 2;
        this.setLocation(x, y);

    
         String[] columnas = {"TipoEvento", "Minuto", "Periodo","Descripcion"};
         
             Object[][] filas = new Object[le.size()][4];
             for (int i=0; i<le.size(); i++) {
                        DataTypes.DataEvento datae = le.get(i);
                        filas[i][0] = datae.getTipoevento().toString();
                        filas[i][1] = datae.getMinuto();
                        filas[i][2] = datae.getPeriodo().toString();

                        DataTypes.TipoEvento tipo = datae.getTipoevento();
                        if (tipo==DataTypes.TipoEvento.Gol){
                            filas[i][3] = datae.getJugador1().getNombre();
                        }else if (tipo==DataTypes.TipoEvento.Tarjeta){
                            if (datae.getAmarilla()){
                                String str = datae.getJugador1().getNombre()+"(Amarilla)";
                                filas[i][3] = str;
                            }
                            else{
                                String str = datae.getJugador1().getNombre()+"(Roja)";
                                filas[i][3] = str;
                            }
                            
                        }else if (tipo==DataTypes.TipoEvento.Sustitucion){
                                String str = datae.getJugador1().getNombre()+" por "+datae.getJugador2().getNombre();
                                filas[i][3] = str;
                        }    
            }
        TableModel q = new DefaultTableModel(filas,columnas);
        jTable1.setModel(q);


        //Fabrica f = new Fabrica();
        //IControladorCompeticiones icc = f.getIControladorCompeticiones();

        try {
            DataJugPartido dataJP = icCompeticiones.listarJugadoresPorBando(id);

            List<DataIdNombre> listNomJug1 = dataJP.getJugadoresLocal();
            int largoListNomJug1 = listNomJug1.size();
            Object[][] tabJ1= new Object[largoListNomJug1][1];

            for (int i=0; i<largoListNomJug1; i++) {
                String nomJug = listNomJug1.get(i).getNombre() ;
                tabJ1[i][0] = nomJug;
            }
            String [] esq = {"Nombre"};
            TableModel dtm1 = new DefaultTableModel(tabJ1,esq);

            List<DataIdNombre> listNomJug2 = dataJP.getJugadoresVisita();
            int largoListNomJug2 = listNomJug2.size();
            Object[][] tabJ2= new Object[largoListNomJug2][1];

            for (int i=0; i<largoListNomJug2; i++) {
                String nomJug = listNomJug2.get(i).getNombre();
                tabJ2[i][0] = nomJug;
            }
            TableModel dtm2 = new DefaultTableModel(tabJ2,esq);

            this.tablaJugEqLocal.setModel(dtm1);
            this.tablaJugEqVis.setModel(dtm2);
            
        }
        catch (ExDatosNoAsignados exc) {
            JOptionPane.showMessageDialog(null,exc.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
            icCompeticiones.finalizarVerDetallesComp();
            this.dispose();
        }
        catch (ExNoExistePartidoEnCompeticion exc) {
            JOptionPane.showMessageDialog(null,exc.getMessage(),"ERROR", JOptionPane.ERROR_MESSAGE);
            icCompeticiones.finalizarVerDetallesComp();
            this.dispose();
        }
        catch (Exception exc) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel50 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaJugEqLocal = new javax.swing.JTable();
        jButton23 = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablaJugEqVis = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setTitle("Lista de Jugadores que disputaron el partido");

        jLabel50.setText("nombreLocal");

        jLabel52.setText("nombreVisitante");

        tablaJugEqLocal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(tablaJugEqLocal);

        jButton23.setText("Aceptar");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        tablaJugEqVis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(tablaJugEqVis);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addComponent(jButton23)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
                        .addGap(112, 112, 112))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel52))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jButton23))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        //Fabrica f = new Fabrica();
        parent.setModoActivado(true);
        //IControladorCompeticiones icc = f.getIControladorCompeticiones();
        icCompeticiones.finalizarVerDetallesComp();
        JOptionPane.showInternalMessageDialog(this,"Fin ver Detalles Competicion","Detalles De Competicion", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
}//GEN-LAST:event_jButton23ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton23;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaJugEqLocal;
    private javax.swing.JTable tablaJugEqVis;
    // End of variables declaration//GEN-END:variables
    private Tarea1 parent;

    private IControladorCompeticiones icCompeticiones;
}
